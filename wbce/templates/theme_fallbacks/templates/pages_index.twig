{#
/*
 * @category        Pages Backend-Tool
 * @package         backend_pages
 * @author          Christian M. Stefan  <stefek@designthings.de>
 * @copyright       GPL v2 or any later (see LICENSE.md for details)
 */
#}

{{ insertCssFile(theme_file('css/pageTree.css')) }}

<script>
    var PAGETREE_USE_DRAG_DROP = {{ USE_DRAG_DROP ? 'true':'false' }};
    var USE_PAGE_LANGUAGES = {{ getSetting('page_languages') ? 'true':'false' }};
</script>


{{ insertJsFile(ADMIN_URL ~ '/pages/ajax/pages_index.js', 'BODY BTM') }}
{{ insertJsFile(theme_file('js/url_slugify.js')) }}
{{ insertCssFile(theme_file('js/selectee/selectee.css')) }}
{{ insertJsFile(theme_file('js/selectee/selectee.jquery.min.js')) }}


<div class="bcp-pane">
    {{ MESSAGE_BOX }}   
    <div{% if USE_DRAG_DROP %} id="dndPages"{% endif %}>	
        <ol id="pageTree" class="sortable">
            <li class="pageTreeHeader staticItem">
                <dl>
                    <dt><span class="small">{{ L_('TEXT:VISIBILITY') }}</span> / {{ L_('TEXT:MENU_TITLE') }}</dt>
                    <dd>						
                        <span>{{ L_('TEXT:PAGE') }}-ID</span>
                        <span>Aktionen</span>
                        <div id="dragableResult"></div>
                    </dd>
                </dl>

            </li>	
            {% if INTRO_PAGE_ACTIVE %}
                <li class="introPage staticItem">
                    <dl>
                        <dt>
                            <i class="pt_icon vis-intro" title="{{ L_('HEADING:MODIFY_INTRO_PAGE') }}">&nbsp;</i>
                            <a href="{{ ADMIN_URL }}/pages/intro.php" title="{{ L_('MESSAGE:PAGES_INTRO_LINK') }}">{{ L_('TEXT:INTRO_PAGE') }} 
                                <i class="pt_icon ico-modify">&nbsp;</i>
                            </a>
                        </dt>
                        <dd>						
                            <span></span>
                            <span></span>
                            <div></div>
                        </dd>
                    </dl>
                </li>
            {% endif %}
            {#{ debug_dump(pageTree) }#}
            {% if PAGES_TOTAL < 1 %}
                <li class="staticItem">{{ L_('MENU:PAGES') }}: {{ L_('TEXT:NONE_FOUND') }}</li>
            {% else %} 
                {# DO NOT CHANGE THE PARAMETERS OF THE FOLLOWING LINE #}
                {% include 'pages_pageTree.twig' with {'pages': pageTree, 'level': 0} %}
            {% endif %}
        </ol>
    </div>

    <ul class="visibilityLegend">
        <li class="pagesTotal">{{ L_('TEXT:RECORDS_TOTAL', 'MENU:PAGES') }}: <span>{{ PAGES_TOTAL }}</span></li>	
        {% if SHOW_TRASH %}
            <li><i class="pt_icon vis-deleted" title="{{ L_('TEXT:VISIBILITY') }} {{ L_('TEXT:DELETED') }}"></i>{{ L_('TEXT:DELETED') }}
                {% if DELETED_PAGES_TOTAL > 0 %}&nbsp;{{ DELETED_PAGES_TOTAL }}{% else %}&nbsp;<i>({{ L_('TEXT:NONE')|lower }})</i>{% endif %} 
                {% if DELETED_PAGES_TOTAL > 0 %}
                    <a href="{{ TRASH_TOGGLE_URL }}">{{ L_('PAGES_TEXT:ENABLE_DISABLE_TRASH') }}</a>
                {% endif %}
            </li>
        {% endif %}
        
        {% if DRAG_DROP_SWITCH_URL %}        
            <li style="float:right">
                <a title="{{ L_('PAGES_TEXT:DRAG_DROP_STATUS') }}" href="{{ DRAG_DROP_SWITCH_URL }}">
                    {{ L_('PAGES_TEXT:DRAG_DROP_STATUS') }}
                </a>
            </li>	
        {% endif %}
    </ul>    
             
    <br>
    
    <form name="add_page" id="add_page" method="post" autocomplete="off">
        {{ FTAN }}
            <div class="cp-two-thirds">
            <div class="cp-settings">
                <div class="formHeading">
                    {{ L_('HEADING:ADD_PAGE') }}                    
                </div>
                    <div class="cp-setting-row">
                        <label class="cp-setting-name" for="menu_title">{{ L_('TEXT:MENU_TITLE') }}</label>
                        <div class="cp-setting-value">
                            <input type="text" name="menu_title" id="menu_title" required="required">
                        </div>
                    </div>
                    <div id="adv_addpage_panel" style="display:none;">
                        {% if WB_SHORTURL_ONELEVEL == false %}
                        <div class="cp-setting-row">
                            <label for="file_name" class="cp-setting-name">{{ L_('TEXT:FILENAME') }}</label>
                            <div class="cp-setting-value">
                                {% set bExt = getSetting('page_extension') != ''  %}
                                <input type="text" id="file_name" name="file_name" {% if bExt %}class="has-file-ext"{% endif %} value="{{ page.file_name }}" />
                                {% if bExt %}<input type="text" disabled class="file-ext" title="{{ L_('TEXT:PAGE_EXTENSION') }}" value="{{ getSetting('page_extension') }}" />{% endif %}
                            </div>                    
                        </div>
                        {% endif %}
                        {#{ debug_dump(getSetting('multiple_menus') )}#}
                        {% if getSetting('page_languages') %}
                        <!-- ~~~~~ language ~~~~ -->
                        <div class="cp-setting-row">
                                <label class="cp-setting-name">{{ L_('TEXT:LANGUAGE') }}</label>
                                <div class="cp-setting-value">
                                        {% set sFlagFlag = 'data-left="' ~ WB_URL ~ '/languages/%s.svg"' %}

                                        <select id="language" name="language">
                                        {% for lang in languages %}               
                                            <option value="{{ lang.lc }}"
                                                data-right="{{ lang.lc }}"  {{ sFlagFlag|format(lang.lc) }}

                                                {% if lang.lc == getSetting('default_language') %} selected="selected"{% endif %}
                                                >{{ lang.name }}
                                            </option>
                                        {% endfor %}
                                        </select>
                                </div>
                        </div> 
                        {% endif %}
                    </div>
                    {#
                    <div class="cp-setting-row">
                        <label class="cp-setting-name" for="parent_page">{{ L_('TEXT:PARENT') }}</label>
                        <div class="cp-setting-value">	
                            <select id="parent" name="parent" class="cpPageSelect">
                                <option value="0" style="font-style: italic;">({{ L_('TEXT:NONE')|lower }})</option>
                                {% set sFlagStyle = ' style="background: url(' ~ WB_URL ~ '/languages/%s.png) no-repeat center left;margin-right:5px; padding-left: 20px;"' %}

                                {% for p in parent_list %} 
                                    <option value="{{ p.page_id }}" title="{{ p.page_title }}"
                                         {% if p.root_icon %}{{ sFlagStyle|format(p.root_icon) }}{% endif %}                                    
                                        {{ p.selected }}
                                        {{ p.disabled }}
                                         {% if p.disabled %} class="selected-item" {% endif %}   
                                        >{{ p.space_trail }}{{ p.menu_title }}</option>
                                {% endfor %}
                            </select>
                        </div>
                    </div>
                    #}
                    <div class="cp-setting-row" id="parent_page_selection">
                        <label class="cp-setting-name" for="parent">{{ L_('TEXT:PARENT') }}</label>
                        <div class="cp-setting-value">
                           <select name="parent" id="parent_page" data-search-label="{{ L_('TEXT:SEARCH') }} ... [{{ L_('TEXT:PAGE') }}-ID, {{ L_('TEXT:MENU_TITLE') }}]">
                               <option value="0" data-left="{{ WB_URL ~ '/languages/'~ p.language ~'.svg' }}" style="font-style:italic">({{ L_('TEXT:NONE')|lower }})</option>
                               {% for p in parent_list %} 
                               {% set sFlagFlag = WB_URL ~ '/languages/'~p.language~'.svg' %}
                                   <option data-id="{{ p.page_id }}" value="{{ p.page_id }}" title="{{ p.page_title }}"
                                    data-right="{{ p.page_id }}"  data-left="{{ sFlagFlag }}"  data-class="type-{{ p.visibility }} mid-{{ p.menu }}"
                                   >{{ p.menu_title }}</option>
                               {% endfor %}
                           </select>
                        </div>
                    </div>
                     
                    <div class="cp-setting-row">
                        <label class="cp-setting-name" for="module_type">{{ L_('TEXT:TYPE') }}</label>
                        <div class="cp-setting-value">
                            <select name="type" id="module_type" data-search-label="'{{ L_('TEXT:SEARCH') }} ... [{{ L_('TEXT:MODULE_NAME') }}]'">
                                {% for module in module_list %} 
                                    <option title="{{ module.description }}" value="{{ module.directory }}" {{ module.selectControl }} title="{{ module.name }}">
                                        {{ module.name }}
                                    </option>
                                {% endfor %} 
                            </select>
                        </div>
                    </div> 
                    {#
                    <div class="cp-setting-row">
                        <label class="cp-setting-name" for="visibility">{{ L_('TEXT:VISIBILITY') }}</label>
                        <div class="cp-setting-value">                        
                            {% set sVisibilityStyle = '' %}
                            {% set aVisibilityModes = ['public', 'private', 'registered', 'hidden', 'none'] %}
                            {% set sVisIcon = 'data-left="' ~ theme_file('icons/%s.svg')~'"' %}
                            <select name="visibility" id="visibility">
                                {% for rec in aVisibilityModes %} 
                                    <option value="{{ rec }}" {{ sVisibilityStyle|format(rec) }}
                                            {{ sVisIcon|format(rec) }}>{{ L_('TEXT:'~rec|upper)|lower }}</option>
                                {% endfor %} 
                            </select>
                        </div>     
                    </div> 	
                    #}   
                    <div class="cp-setting-row">
                        <label>
                            <input type="checkbox" name="adv_add_page" class="toggle">{{ L_('TEXT:SHOW_ADVANCED') }}
                        </label>
                    </div>
                </div>    
                </div>    
                <div class="cp-one-third">                    
                    <div class="cp-settings island">
                        <div class="formHeading">{{ L_('TEXT:VISIBILITY') }}</div>
                                     <!-- ~~~~~ visibility ~~~~ -->
                            <div class="cp-setting-row fullValue">                
                                <div class="cp-setting-value">           
                                    {% set aVisibilityModes = ['public', 'private', 'registered', 'hidden', 'none'] %}
                                    {% set sVisIcon = ' data-left="' ~ theme_file('icons/%s.svg')~'"' %}
                                    <select name="visibility" id="visibility">
                                        {% for rec in aVisibilityModes %} 
                                            <option value="{{ rec }}"
                                                {% if rec == page.visibility %} selected="selected"{% endif %}
                                                {{ sVisIcon|format(rec) }}
                                            >{{ L_('TEXT:'~rec|upper)|lower }}</option>
                                        {% endfor %} 
                                    </select>
                                </div>    
                            </div>
                            <div id="administrators">	
                                <ul class="operatorList">
                                    <li>{{ L_('TEXT:ADMINISTRATORS') }} ({{ L_('TEXT:GROUP') }}):</li>
                                    {% for rec in operators_list %} 
                                    <li>
                                        <input type="checkbox" name="admin_groups[]" id="admin_group_{{ rec.group_id }}" value="{{ rec.group_id }}"
                                            {% if rec.checked == 1 %} checked="checked"{% endif %}
                                            {% if rec.disabled == 1 %} disabled="disabled"{% endif %} />
                                        <label for="admin_group_{{ rec.group_id }}">{{ rec.group_name }}</label>
                                    </li>
                                    {% endfor %} 
                                </ul>
                            </div>
                            <div id="allowed_viewers" style="display: none;">
                                <ul class="operatorList">
                                    <li>{{ L_('TEXT:REGISTERED_VIEWERS') }} ({{ L_('TEXT:GROUP') }}):</li>
                                    {% for rec in viewers_list %} 
                                    <li>
                                        <input type="checkbox" name="viewing_groups[]" id="viewing_group_{{ rec.group_id }}" value="{{ rec.group_id }}"
                                            {% if rec.checked %} checked="checked"{% endif %}
                                            {% if rec.disabled %} disabled="disabled"{% endif %} />
                                        <label for="viewing_group_{{ rec.group_id }}">{{ rec.group_name }}</label>
                                    </li>
                                    {% endfor %} 
                                </ul>
                            </div>
                        </div>
                </div>
                <div style="clear:both"></div>
                <div class="cp-settings">
                    <div class="cp-buttons-row">  
                        <div class="pos-right">

                            <label for="go_to_new_page"><input class="settingCheckbox" type="checkbox" name="go_to_new_page" id="go_to_new_page" value="1"{% if GO_TO_CREATED_PAGE %} checked="checked"{% endif %}>
                            {{ L_('TEXT:GO_TO_CREATED_PAGE') }}</label>
                            <button type="submit" class="button ico-add" name="add_new_page">{{ L_('TEXT:ADD') }}</button>
                        </div>

                    </div>   
                </div>   
            </div>             
    </form>
</div>
<div style="height:200px"></div>
<style>.pt_page{ 
    scroll-margin-top: 165px;
    }
    
</style>
<script>    
function getParameterByName(name, url) {
  if (!url) url = window.location.href;
  name = name.replace(/[\[\]]/g, '\\$&');
  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
      results = regex.exec(url);
  if (!results) return null;
  if (!results[2]) return '';
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

$(document).ready(function () {
    const latest_page = getParameterByName('latest_page') || 0;
    const pageNum = Number(latest_page);
    if(pageNum > 0){
        $pageElement = $('li#pageID_' + pageNum);
        $pageElement.addClass('highlite');
        
        setTimeout(() => {
            $pageElement.removeClass('highlite');

        }, 5000);

    }
});


$(document).on('mouseover', 'a[data-confirm]', function(e) {
    var checkRel = $(this).attr('data-confirm');
    var sContent;

    switch(checkRel){
        case 'remove_multiple': sContent = '{{ L_('TEXT:DELETE_RECORD', 'MENU:PAGES') }}'; break;
        case 'trash': sContent = '{{ L_('TEXT:TRASH_RECORD', 'TEXT:PAGE') }}'; break;
        case 'trash_multiple': sContent = '{{ L_('TEXT:TRASH_RECORD', 'MENU:PAGES') }}'; break;
        case 'restore': sContent = '{{ L_('TEXT:RESTORE_RECORD', 'TEXT:PAGE') }}'; break;
        case 'restore_multiple': sContent = '{{ L_('TEXT:RESTORE_RECORD', 'MENU:PAGES') }}';  break;
        default: sContent = '{{ L_('TEXT:DELETE_RECORD', 'TEXT:PAGE') }}';
    }

    $(this).attr('title', sContent);
});
    
$(document).ready(function () {
    
    $('.toggle').change(function () {                
        $('#adv_addpage_panel').toggle(this.checked);
    }).change(); //ensure visible state matches initially
     $("a[data-confirm]").click(function(e){
        e.preventDefault();   
        var el = $(this);
        var sTitle = el.closest('dl').children('dd.pt_pageTitle').text();
        var idKey = el.closest('dl').attr('id').substring(6);
        var checkRel = el.attr('data-confirm');
        var sAction = 'delete';
        switch(checkRel){
            case 'remove_multiple': sContent = '{{ L_('MESSAGE:PAGES_REMOVE_CONFIRM') }}'; break;
            case 'trash': sContent = '{{ L_('MESSAGE:PAGE_TRASH_CONFIRM') }}'; break;
            case 'trash_multiple': sContent = '{{ L_('MESSAGE:PAGES_TRASH_CONFIRM') }}'; break;
            case 'restore': sContent = '{{ L_('MESSAGE:PAGE_RESTORE') }}'; 
            case 'restore_multiple': 
                sContent = '{{ L_('MESSAGE:PAGES_RESTORE') }}'; 
                sAction = 'restore';                
                break;
            default: sContent = '{{ L_('MESSAGE:PAGE_REMOVE_CONFIRM') }}';
        }
           // Use the browser's native confirm dialog
        var confirmed = window.confirm(sTitle + '\n\n' + sContent);
        if (confirmed) {
            var loc = ADMIN_URL + "/pages/index.php?func=" + sAction + "&page_id=" + idKey;
            location.href = loc;
        }
    }); 
    
    $("#menu_title").keyup(function(){
        var Text = $(this).val();
        Text = url_slug(Text);
        $("#file_name").val(Text);    
    });
    
        
    $('#visibility').selectee({
        customSelector: 'icon_left',
        useSearch: 0
    });
    
   
    $('#module_type').selectee({
        customSelector: 'title_only'
    });
    
    let $parentPageSelectee = $('#parent_page');
    $parentPageSelectee.selectee({
        customSelector: 'flag-right',
        searchFields: 'text right',
    });
    
    $("a.add_child").on("click", function (e) {
      e.preventDefault();
      var iID = $(this).closest('li').attr('rel');
      $parentPageSelectee.val(iID).trigger("change");

      // Scroll to anchor with ID 'add_page' when it becomes available
      var elementOffset = $('form#add_page').offset().top;
      $('html, body').animate({ scrollTop: elementOffset }, 250, function() {
        var selectatorDropdown = $('#selectee_parent_page');
        selectatorDropdown.addClass('glow-effect');
        setTimeout(function() {
          selectatorDropdown.removeClass('glow-effect');
        }, 1250); // Adjust the duration of the glow effect here (in milliseconds)
      });
    });

});

</script>
<style>
.glow-effect {
    transition: box-shadow 0.3s ease-in-out;
    box-shadow: 0px 0px 5px 3px #a7e1e4;
}
</style>